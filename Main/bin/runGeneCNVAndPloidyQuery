#!/usr/bin/perl

use strict;
use lib "$ENV{GUS_HOME}/lib/perl";
use Getopt::Long;
use GUS::ObjRelP::DbiDatabase;
use GUS::Supported::GusConfig;
use CBIL::Util::PropertySet;

my ($gusConfigFile,$organismAbbrev,$geneSourceIdOrthologFile,$chrsForCalcsFile);
&GetOptions("organismAbbrev=s" => \$organismAbbrev,
            "geneSourceIdOrthologFile=s" => \$geneSourceIdOrthologFile,
            "chrsForCalcsFile=s" => \$chrsForCalcsFile);
my $ploidy = 2;

my $geneSourceSql = "with sequence as (
                select gf.source_id as gene_source_id
                , gf.na_feature_id
                , ns.source_id as contig_source_id
                , ns.source_id as sequence_source_id
                , ns.TAXON_ID
                from dots.genefeature gf
                , DOTS.NASEQUENCE ns
                , SRES.ONTOLOGYTERM ot
                where gf.na_sequence_id = ns.na_sequence_id
                and ot.name = 'chromosome'
                and ns.SEQUENCE_ONTOLOGY_ID = ot.ONTOLOGY_TERM_ID
                and ns.taxon_id = (select taxon_id from apidb.organism where abbrev = '$organismAbbrev')
            ), orthologs as (
                select gf.na_feature_id, sg.name
                from dots.genefeature gf
                , dots.SequenceSequenceGroup ssg
                , dots.SequenceGroup sg
                , core.TableInfo ti
                where gf.na_feature_id = ssg.sequence_id
                and ssg.sequence_group_id = sg.sequence_group_id
                and ssg.source_table_id = ti.table_id
                and ti.name = 'GeneFeature'
            )
            select s.gene_source_id
            , o.name
            from sequence s
            , orthologs o
            where s.na_feature_id = o.na_feature_id";

my $chrsForCalcsSql = "select ns.source_id from dots.nasequence ns, sres.ontologyterm ot where ot.name = 'chromosome' and ot.ontology_term_id = ns.sequence_ontology_id and ns.taxon_id = (select taxon_id from apidb.organism where abbrev = '$organismAbbrev')";

$gusConfigFile = $ENV{GUS_HOME}."/config/gus.config";
die "Config file $gusConfigFile does not exist" unless -e $gusConfigFile;

my @properties = ();
my $gusConfig = CBIL::Util::PropertySet -> new ($gusConfigFile, \@properties, 1);

my $db = GUS::ObjRelP::DbiDatabase-> new($gusConfig->{props}->{dbiDsn},
                                         $gusConfig->{props}->{databaseLogin},
                                         $gusConfig->{props}->{databasePassword},
                                         0,0,1, # verbose, no insert, default
                                         $gusConfig->{props}->{coreSchemaName});

my $dbh = $db->getQueryHandle();

my $orthoMclStmt = $dbh->prepare($geneSourceSql);
$orthoMclStmt->execute();

open(GENE,">$geneSourceIdOrthologFile");
while (my @row = $orthoMclStmt->fetchrow_array()){
    print GENE "$row[0]\t$row[1]\n";
}
close GENE;

my $chrsForCalcs = $dbh->prepare($chrsForCalcsSql);
$chrsForCalcs->execute();

open(CHRS,">$chrsForCalcsFile");
while (my @row = $chrsForCalcs->fetchrow_array()){
    print CHRS "$row[0]\t\n";
}
close CHRS;

$dbh->disconnect();






