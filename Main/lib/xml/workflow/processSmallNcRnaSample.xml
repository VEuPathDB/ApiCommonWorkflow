<workflowGraph name="">
    <param name="projectName"/>
    <param name="experimentDataDir"/>
    <param name="readsFile"/>
    <param name="sampleName"/>
    <param name="indexDir"/>
    <param name="organismAbbrev"/>
    <param name="experimentName"/>
    <param name="hasPairedEnds"/>
    <param name="isColorspace"/>
    <param name="removePCRDuplicates"/>
    <param name="extraBowtieParams"/>
    <param name="minReadLength"/>
    <param name="maxReadLength"/>
    <param name="sequenceFormat"/>
    <param name="tRNArRNASeqsDir"/>
    <param name="relativeWebServicesDir"/>
    <param name="seqSizeFile"/>
    <param name="gusConfigFile"/>
    <param name="downloadMethod"/>
   
    <constant name="sampleAnalysisDir">$$experimentDataDir$$/$$organismAbbrev$$_$$experimentName$$_$$sampleName$$_smallNcRnaSample_RSRC</constant> 
    <constant name="lengthFilterDir">$$sampleAnalysisDir$$/lengthFilter</constant>
    <constant name="tRNArRNAMappingDir">$$sampleAnalysisDir$$/tRNArRNAMapping</constant>
    <constant name="filteredReadsDir">$$sampleAnalysisDir$$/filteredReads</constant>

   
 <!-- The dataset loader here does not get anything from manual delivery.  It only makes rows in sres.extdb and extdbrls -->
    <subgraph name="loadSmallNcRnaSample" xmlFile="loadDataset.xml">
        <paramValue name="datasetName">$$organismAbbrev$$_$$experimentName$$_$$sampleName$$_smallNcRnaSample_RSRC</paramValue>
        <paramValue name="datasetLoaderXmlFileName">$$projectName$$/$$organismAbbrev$$/$$experimentName$$.xml</paramValue>
        <paramValue name="parentDataDir">$$experimentDataDir$$</paramValue>
      <paramValue name="gusConfigFile">$$gusConfigFile$$</paramValue>
    </subgraph>
    
    <step name="makeLengthFilterDir" stepClass="ReFlow::StepClasses::MakeDataDir">
        <paramValue name="dataDir">$$lengthFilterDir$$</paramValue>
    </step>

    <step name="maketRNArRNAMappingDir" stepClass="ReFlow::StepClasses::MakeDataDir">
        <paramValue name="dataDir">$$tRNArRNAMappingDir$$</paramValue>
    </step>

    <step name="makeFilteredReadsDir" stepClass="ReFlow::StepClasses::MakeDataDir">
        <paramValue name="dataDir">$$filteredReadsDir$$</paramValue>
    </step>


    <step name="filterFastqByLength" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::FilterFastqByLength">
        <paramValue name="readsFile">$$readsFile$$</paramValue> 
        <paramValue name="sequenceFormat">$$sequenceFormat$$</paramValue>
        <paramValue name="minLength">$$minReadLength$$</paramValue>
        <paramValue name="maxLength">$$maxReadLength$$</paramValue>
        <paramValue name="outFile">$$lengthFilterDir$$/$$sampleName$$.fastq</paramValue>
        <depends name="loadSmallNcRnaSample"/>
        <depends name="makeLengthFilterDir"/>
    </step>

<!-- Run Bowtie locally against tRNA and rRNA seqs -->
    <subgraph name="mapReadsTotRNArRNATranscripts" xmlFile="mapReadsTotRNArRNATranscripts.xml">
        <paramValue name="organismAbbrev">$$organismAbbrev$$</paramValue>
        <paramValue name="experimentDataDir">$$experimentDataDir$$</paramValue>
        <paramValue name="readsFile">$$lengthFilterDir$$/$$sampleName$$.fastq</paramValue>
        <paramValue name="pairedReadsFile">$$lengthFilterDir$$/$$sampleName$$.fastq.paired</paramValue>
        <paramValue name="isColorspace">$$isColorspace$$</paramValue>
        <paramValue name="removePCRDuplicates">$$removePCRDuplicates$$</paramValue>
        <paramValue name="extraBowtieParams">$$extraBowtieParams$$</paramValue>
        <paramValue name="sampleName">$$sampleName$$</paramValue>
        <paramValue name="tRNArRNASeqsDir">$$tRNArRNASeqsDir$$</paramValue>
        <paramValue name="filteredReadsDir">$$filteredReadsDir$$</paramValue>
        <paramValue name="mappingDir">$$tRNArRNAMappingDir$$</paramValue> 
        <depends name="maketRNArRNAMappingDir"/>
        <depends name="filterFastqByLength"/>
        <depends name="makeFilteredReadsDir"/>
    </subgraph> 

<!-- Filter out mapped reads and mirror filtered reads to cluster -->

    <subgraph name="mirrorSampleFiles" xmlFile="mirrorHtsSamples.xml"> <!--Can probably stick with this subgraph -->
        <paramValue name="readsFilePath">$$filteredReadsDir$$</paramValue>
        <paramValue name="readsFileBasename">$$sampleName$$.fastq</paramValue> 
        <paramValue name="hasPairedEnds">$$hasPairedEnds$$</paramValue>
        <paramValue name="snpStrainAbbrev">$$sampleName$$</paramValue> <!--will need to retain param name for subgraph to work -->
        <depends name="mapReadsTotRNArRNATranscripts"/>
    </subgraph>

<!-- Bowtie here should run filtered reads against genome -->
    <subgraph name="runBowtie" xmlFile="runBowtie.xml">
        <paramValue name="projectName">$$projectName$$</paramValue>
        <paramValue name="experimentDataDir">$$experimentDataDir$$</paramValue>
        <paramValue name="readsFile">$$filteredReadsDir$$/$$sampleName$$.fastq</paramValue>
        <paramValue name="pairedReadsFile">$$filteredReadsDir$$/$$sampleName$$.fastq.paired</paramValue> 
        <paramValue name="sampleName">$$sampleName$$</paramValue>
        <paramValue name="indexDir">$$indexDir$$</paramValue>
        <paramValue name="organismAbbrev">$$organismAbbrev$$</paramValue>
        <paramValue name="hasPairedEnds">$$hasPairedEnds$$</paramValue>
        <paramValue name="downloadMethod">$$downloadMethod$$</paramValue>
        <paramValue name="isColorspace">$$isColorspace$$</paramValue>
        <paramValue name="removePCRDuplicates">$$removePCRDuplicates$$</paramValue>
        <paramValue name="extraBowtieParams">$$extraBowtieParams$$</paramValue>
        <paramValue name="seqSizeFile">$$seqSizeFile$$</paramValue>
        <paramValue name="writeBedFile">false</paramValue>
        <paramValue name="sraQueryString"></paramValue>
      <paramValue name="gusConfigFile">$$gusConfigFile$$</paramValue>
        <depends name="mirrorSampleFiles"/>
    </subgraph>

    <step name="archiveFilteredReads" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::MakeTarArchive">
        <paramValue name="fileToArchive">$$filteredReadsDir$$/$$sampleName$$.fastq</paramValue>
        <depends name="runBowtie"/>
    </step>
    
    <step name="makeBamIndex" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::CreateBamIndex">
        <paramValue name="bamFile">$$experimentDataDir$$/analyze_$$sampleName$$/results/$$sampleName$$.bam</paramValue>
        <depends name="runBowtie"/>
    </step>

    <step name="copyBamFileToStaging" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::CopyBAMFileToWebServices">
        <paramValue name="organismAbbrev">$$organismAbbrev$$</paramValue>
        <paramValue name="projectName">$$projectName$$</paramValue>
        <paramValue name="inputFile">$$experimentDataDir$$/analyze_$$sampleName$$/results/$$sampleName$$.bam</paramValue>
        <paramValue name="experimentName">$$experimentName$$</paramValue>
        <paramValue name="snpStrain">$$sampleName$$</paramValue>
        <paramValue name="relativeWebServicesDir">$$relativeWebServicesDir$$</paramValue>
        <paramValue name="gusConfigFile">$$gusConfigFile$$</paramValue>
        <depends name="makeBamIndex"/>
    </step>

    <step name="copyBamIndexToStaging" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::CopyBAMFileToWebServices">
        <paramValue name="organismAbbrev">$$organismAbbrev$$</paramValue>
        <paramValue name="projectName">$$projectName$$</paramValue>
        <paramValue name="inputFile">$$experimentDataDir$$/analyze_$$sampleName$$/results/$$sampleName$$.bam.bai</paramValue>
        <paramValue name="experimentName">$$experimentName$$</paramValue>
        <paramValue name="snpStrain">$$sampleName$$</paramValue>
        <paramValue name="relativeWebServicesDir">$$relativeWebServicesDir$$</paramValue>
        <paramValue name="gusConfigFile">$$gusConfigFile$$</paramValue>
        <depends name="makeBamIndex"/>
    </step>

</workflowGraph>

