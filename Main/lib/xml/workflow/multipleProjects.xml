<workflowGraph name="multipleProjects">
  <param name="projectName"/> <!-- GenomicsDB -->

  <constant name="globalDatasetLoaderXmlFile">GenomicsGlobal.xml</constant>
  <constant name="multiProjectsDatasetLoaderXmlFile">MultiProjects.xml</constant>
  <constant name="multiProjectsDataDir">multiProjects</constant>

<!-- call globalGraph (Mustafa's but we added back things like NRDB ...-->
  <globalSubgraph name="global" xmlFile="globalGraph.xml">
    <paramValue name="commonDatasetLoaderXmlFile">$$projectName$$/$$projectName$$Common.xml</paramValue>
    <paramValue name="globalDatasetLoaderXmlFile">$$globalDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="projectName">$$projectName$$</paramValue>
  </globalSubgraph>

  <step name="makeMultiProjectsDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$multiProjectsDataDir$$</paramValue>
  </step>

  <step name="initClusterHomeDir"
        stepClass="ReFlow::StepClasses::InitClusterHomeDir">
<!--    <depends name="initUserGroupProject"/>-->
  </step>

<!-- call project.xml (generated) for each component -->

    <subgraph name="PlasmoDB" xmlFile="generated/PlasmoDB/project.xml">
      <paramValue name="projectName">PlasmoDB</paramValue>
      <paramValue name="projectVersionForWebsiteFiles">CURRENT</paramValue>
      <paramValue name="areBigGenomes">false</paramValue>
      <depends name="initClusterHomeDir"/>
    </subgraph>

    <subgraph name="TriTrypDB" xmlFile="generated/TriTrypDB/project.xml">
      <paramValue name="projectName">TriTrypDB</paramValue>
      <paramValue name="projectVersionForWebsiteFiles">CURRENT</paramValue>
      <paramValue name="areBigGenomes">false</paramValue>
      <depends name="initClusterHomeDir"/>
    </subgraph>

    <subgraph name="VectorBase" xmlFile="generated/VectorBase/project.xml">
      <paramValue name="projectName">VectorBase</paramValue>
      <paramValue name="projectVersionForWebsiteFiles">CURRENT</paramValue>
      <paramValue name="areBigGenomes">false</paramValue>
      <depends name="initClusterHomeDir"/>
    </subgraph>

    <subgraph name="ToxoDB" xmlFile="generated/ToxoDB/project.xml">
      <paramValue name="projectName">ToxoDB</paramValue>
      <paramValue name="projectVersionForWebsiteFiles">CURRENT</paramValue>
      <paramValue name="areBigGenomes">false</paramValue>
      <depends name="initClusterHomeDir"/>
    </subgraph>

    <subgraph name="OrthoMCLCore" xmlFile="OrthoMCLCore.xml">
      <paramValue name="projectName">OrthoMCL</paramValue>
      <paramValue name="projectVersionForWebsiteFiles">CURRENT</paramValue>
      <dependsExternal name="PlasmoDB_checkOrthoCoreProteomeDirs"/>
      <dependsExternal name="TriTrypDB_checkOrthoCoreProteomeDirs"/>
      <dependsExternal name="VectorBase_checkOrthoCoreProteomeDirs"/>
      <dependsExternal name="ToxoDB_checkOrthoCoreProteomeDirs"/>
    </subgraph>

    <subgraph name="OrthoMCLPeripheral" xmlFile="OrthoMCLPeripheral.xml">
      <paramValue name="projectName">OrthoMCL</paramValue>
      <paramValue name="projectVersionForWebsiteFiles">CURRENT</paramValue>
      <paramValue name="residualGroupIdPrefix">OGR7r1_</paramValue>
      <depends name="OrthoMCLCore"/>
      <dependsExternal name="PlasmoDB_checkOrthoPeripheralProteomeDirs"/>
      <dependsExternal name="TriTrypDB_checkOrthoPeripheralProteomeDirs"/>
      <dependsExternal name="VectorBase_checkOrthoPeripheralProteomeDirs"/>
      <dependsExternal name="ToxoDB_checkOrthoPeripheralProteomeDirs"/>
    </subgraph>

    <subgraph name="alphaFold" xmlFile="loadDataset.xml">
      <paramValue name="datasetName">alphaFold_RSRC</paramValue>
      <paramValue name="datasetLoaderXmlFileName">$$multiProjectsDatasetLoaderXmlFile$$</paramValue>
      <paramValue name="parentDataDir">$$multiProjectsDataDir$$</paramValue>
     <paramValue name="gusConfigFile">$$projectName$$_gus.config</paramValue>
     <depends name="makeMultiProjectsDataDir"/>
     <depends name="PlasmoDB"/>
     <depends name="ToxoDB"/>
     <depends name="TriTrypDB"/>
     <depends name="VectorBase"/>
    </subgraph>

    <subgraph name="ExternalResourceUrl" xmlFile="loadDataset.xml">
      <paramValue name="datasetName">ExternalResourceUrl_Ensembl_RSRC</paramValue>
      <paramValue name="datasetLoaderXmlFileName">$$multiProjectsDatasetLoaderXmlFile$$</paramValue>
      <paramValue name="parentDataDir">$$multiProjectsDataDir$$</paramValue>
     <paramValue name="gusConfigFile">$$projectName$$_gus.config</paramValue>
     <depends name="makeMultiProjectsDataDir"/>
     <depends name="PlasmoDB"/>
     <depends name="ToxoDB"/>
     <depends name="TriTrypDB"/>
     <depends name="VectorBase"/>
    </subgraph>

<!-- call project.xml for non veupathdb proteomes used for orthomcl.
     is this just called "OrthoMCL.xml" (uniprot proteomes, uniprot EC) ??
     QUESTION:  What should this be called??
-->

<!-- QUESTION:  SHOULD ISASIMPLE steps go here? -->




<!-- TODO:  add a checkpoint here .. need 2 checkpoints. one for core and one for peripheral-->

<!-- check if we've acquired all of the proteome fasta files.  We need to do this because
     we cannot have a reflow dependency on loadGenome here
     ApiCommonWorkflow::Main::WorkflowSteps::CheckForCompletedFile is an example
     will need to query the worklflow step tables (or dataset xml) to get expected number
-->

<!-- call OrthoFinder -->
</workflowGraph>
